---
title: "Dose Descriptive Statistics and Modeling"
format: html
editor: visual
---

```{r, include = FALSE}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ggalluvial)
library(gtsummary)
library(patchwork)
library(lmtp)

knitr::opts_chunk$set(warning=FALSE, message=FALSE)
knitr::opts_chunk$set(fig.width=18, fig.height=12) 

# scripts to make confidence intervals
#source(here::here("scripts/source/utils_adapted.R"))
source(here::here("scripts/source/unadjusted_ci.R"))
```

## Reading/Storing result_newcensors

### Reading result_newcensors for Marginal CI

```{r}
met_result_newcensors_lim <- data.frame(week = integer(0), race = numeric(0), cows = numeric(0),
                                        theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_lim <- data.frame(week = integer(0), race = numeric(0), cows = numeric(0),
                                        theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

comb_binomial_lim <- data.frame(week = integer(0), race = numeric(0), cows = numeric(0),
                                theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

# Loop through the file paths and read the RDS files into data frames
for (z in 1:2)
{
for (j in 1:3)
{
met_result_newcensors_all_temp <- data.frame(week = numeric(0), race = numeric(0), cows = numeric(0),
                                             theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_result_newcensors_lim_temp <- data.frame(week = numeric(0), race = numeric(0), cows = numeric(0),
                                             theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_all_temp <- data.frame(week = numeric(0), race = numeric(0), cows = numeric(0),
                                             theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_lim_temp <- data.frame(week = numeric(0), race = numeric(0), cows = numeric(0),
                                             theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

for (i in 4:4) {
    
    if(i > 2){
  data_met_lim <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", j, sep = "_", i, sep = "_", z, ".rds")))
  met_result_newcensors_lim_temp[[1, "week"]] <- i
  met_result_newcensors_lim_temp[[1, "race"]] <- j
  met_result_newcensors_lim_temp[[1, "cows"]] <- z
  met_result_newcensors_lim_temp[[1, "theta"]] <- data_met_lim$theta
  met_result_newcensors_lim_temp[[1, "se"]] <- data_met_lim$standard_error
  met_result_newcensors_lim_temp[[1, "lower"]] <- data_met_lim$low
  met_result_newcensors_lim_temp[[1, "upper"]] <- data_met_lim$high
    } else
    {
        data_met_lim <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", j, sep = "_", i, sep = "_", z, ".rds")))
  met_result_newcensors_lim_temp[[1, "week"]] <- i
  met_result_newcensors_lim_temp[[1, "race"]] <- j
  met_result_newcensors_lim_temp[[1, "cows"]] <- z
  met_result_newcensors_lim_temp[[1, "theta"]] <- data_met_lim$theta
  met_result_newcensors_lim_temp[[1, "se"]] <- data_met_lim$standard_error
  met_result_newcensors_lim_temp[[1, "lower"]] <- data_met_lim$low
  met_result_newcensors_lim_temp[[1, "upper"]] <- data_met_lim$high
    }
  
  data_bup_lim <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", j, sep = "_", i, sep = "_", z, ".rds")))
  bup_result_newcensors_lim_temp[[1, "week"]] <- i
  bup_result_newcensors_lim_temp[[1, "race"]] <- j
  bup_result_newcensors_lim_temp[[1, "cows"]] <- z
  bup_result_newcensors_lim_temp[[1, "theta"]] <- data_bup_lim$theta
  bup_result_newcensors_lim_temp[[1, "se"]] <- data_bup_lim$standard_error
  bup_result_newcensors_lim_temp[[1, "lower"]] <- data_bup_lim$low
  bup_result_newcensors_lim_temp[[1, "upper"]] <- data_bup_lim$high
}

met_result_newcensors_lim <- met_result_newcensors_lim |>
    merge(met_result_newcensors_lim_temp, all = TRUE) 

bup_result_newcensors_lim <- bup_result_newcensors_lim |>
    merge(bup_result_newcensors_lim_temp, all = TRUE)

}
}

for (z in 1:2)
{
# binomial analysis
for (j in 1:3)
{
    comb_binomial_lim_temp <- data.frame(week = numeric(0), race = numeric(0), cows = numeric(0),
                                         theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))
    
    comb_binomial_all_temp <- data.frame(week = numeric(0), race = numeric(0), cows = numeric(0),
                                         theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

    
for (i in 4:4) 
{
    data_comb_binomial_lim <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", j, sep = "_", i, sep = "_", z, ".rds")))
    comb_binomial_lim_temp[[1, "week"]] <- i
    comb_binomial_lim_temp[[1, "race"]] <- j
    comb_binomial_lim_temp[[1, "cows"]] <- z
    comb_binomial_lim_temp[[1, "theta"]] <- data_comb_binomial_lim$theta
    comb_binomial_lim_temp[[1, "se"]] <- data_comb_binomial_lim$standard_error
    comb_binomial_lim_temp[[1, "lower"]] <- data_comb_binomial_lim$low
    comb_binomial_lim_temp[[1, "upper"]] <- data_comb_binomial_lim$high
}

comb_binomial_lim <- comb_binomial_lim |>
    merge(comb_binomial_lim_temp, all = TRUE)
}
}

met_result_newcensors_lim <- met_result_newcensors_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

bup_result_newcensors_lim <- bup_result_newcensors_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

comb_binomial_lim <- comb_binomial_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))
```

### Reading result_newcensors for CI

```{r}
### High COWS
# bup limited 
bup_as_1_high <- list()
bup_as_2_high <- list()
bup_as_3_high <- list()
met_as_1_high <- list()
met_as_2_high <- list()
met_as_3_high <- list()

comb_binomial_as_1_high <- list()
comb_binomial_as_2_high <- list()
comb_binomial_as_3_high <- list()

for (z in 1:1)
{
    for (i in 4:4) {
        
            #bup limited
            bup_as_1_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", "1", sep = "_", i, 
                                                       sep = "_", z, ".rds")))
            
            bup_as_2_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", "2", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            bup_as_3_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", "3", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
          if(i >= 3){  
            #met limited
            met_as_1_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", "1", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_2_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", "2", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_3_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", "3", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            #comb binomial limited
            comb_binomial_as_1_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", "1", sep = "_", i, sep = "_", z, ".rds")))
            
            comb_binomial_as_2_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", "2", sep = "_", i, sep = "_", z, ".rds")))
            
            comb_binomial_as_3_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", "3", sep = "_", i, sep = "_", z, ".rds")))
        } else
        {
            #met limited
            met_as_1_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", "1", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_2_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", "2", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_3_high[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", "3", sep = "_", i,
                                                       sep = "_", z, ".rds")))
        }
    }
    
    lmtp_contrast_simple <- function(X, Y) {
        res <- lmtp_contrast(X, ref = Y)
        
        return(res)
    }
}

bup_as_12_contrast_high <- mapply(lmtp_contrast_simple, X = bup_as_2_high, Y = bup_as_1_high)

bup_as_12_df_high <- as.data.frame(bup_as_12_contrast_high[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

bup_as_13_contrast_high <- mapply(lmtp_contrast_simple, X = bup_as_3_high, Y = bup_as_1_high)

bup_as_13_df_high <- as.data.frame(bup_as_13_contrast_high[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

met_as_12_contrast_high <- mapply(lmtp_contrast_simple, X = met_as_2_high, Y = met_as_1_high)

met_as_12_df_high <- as.data.frame(met_as_12_contrast_high[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

met_as_13_contrast_high <- mapply(lmtp_contrast_simple, X = met_as_3_high, Y = met_as_1_high)

met_as_13_df_high <- as.data.frame(met_as_13_contrast_high[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

comb_binomial_as_12_contrast_high <- mapply(lmtp_contrast_simple, X = comb_binomial_as_2_high, Y = comb_binomial_as_1_high)

comb_binomial_as_12_df_high <- as.data.frame(comb_binomial_as_12_contrast_high[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

comb_binomial_as_13_contrast_high <- mapply(lmtp_contrast_simple, X = comb_binomial_as_3_high, Y = comb_binomial_as_1_high)

comb_binomial_as_13_df_high <- as.data.frame(comb_binomial_as_13_contrast_high[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

##### CTN low
# bup limited 
bup_as_1_low <- list()
bup_as_2_low <- list()
bup_as_3_low <- list()
met_as_1_low <- list()
met_as_2_low <- list()
met_as_3_low <- list()

comb_binomial_as_1_low <- list()
comb_binomial_as_2_low <- list()
comb_binomial_as_3_low <- list()

for (z in 2:2)
{
    for (i in 4:4) {
        
        # continuous
            
            #bup limited
            bup_as_1_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", "1", sep = "_", i, 
                                                       sep = "_", z, ".rds")))
            
            bup_as_2_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", "2", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            bup_as_3_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/bup/","result_newcensor_limited", "3", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
        if(i >= 3){
            met_as_1_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", "1", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_2_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", "2", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_3_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_newcensor_met_limited", "3", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            #comb binomial limited
            comb_binomial_as_1_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", "1", sep = "_", i, sep = "_", z, ".rds")))
            
            comb_binomial_as_2_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", "2", sep = "_", i, sep = "_", z, ".rds")))
            
            comb_binomial_as_3_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/comb_binomial/","result_newcensor_comb_limited", "3", sep = "_", i, sep = "_", z, ".rds")))
        } else{
            #met limited
            met_as_1_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", "1", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_2_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", "2", sep = "_", i,
                                                       sep = "_", z, ".rds")))
            
            met_as_3_low[[1]] <- readRDS(here::here(paste0("./data/cows_nonimpute/met/","result_met_newcensor_limited", "3", sep = "_", i,
                                                       sep = "_", z, ".rds")))
        }
    }
    
    lmtp_contrast_simple <- function(X, Y) {
        res <- lmtp_contrast(X, ref = Y)
        
        return(res)
    }
}

bup_as_12_contrast_low <- mapply(lmtp_contrast_simple, X = bup_as_2_low, Y = bup_as_1_low)

bup_as_12_df_low <- as.data.frame(bup_as_12_contrast_low[,1]$val) |>
    mutate(time = 4)|>
    arrange(time)

bup_as_13_contrast_low <- mapply(lmtp_contrast_simple, X = bup_as_3_low, Y = bup_as_1_low)

bup_as_13_df_low <- as.data.frame(bup_as_13_contrast_low[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

met_as_12_contrast_low <- mapply(lmtp_contrast_simple, X = met_as_2_low, Y = met_as_1_low)

met_as_12_df_low <- as.data.frame(met_as_12_contrast_low[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

met_as_13_contrast_low <- mapply(lmtp_contrast_simple, X = met_as_3_low, Y = met_as_1_low)

met_as_13_df_low <- as.data.frame(met_as_13_contrast_low[,1]$val) |>
    mutate(time = 4)|>
    arrange(time)

comb_binomial_as_12_contrast_low <- mapply(lmtp_contrast_simple, X = comb_binomial_as_2_low, Y = comb_binomial_as_1_low)

comb_binomial_as_12_df_low <- as.data.frame(comb_binomial_as_12_contrast_low[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

comb_binomial_as_13_contrast_low <- mapply(lmtp_contrast_simple, X = comb_binomial_as_3_low, Y = comb_binomial_as_1_low)

comb_binomial_as_13_df_low <- as.data.frame(comb_binomial_as_13_contrast_low[,1]$val) |>
    mutate(time = 4) |>
    arrange(time)

### COMBINING
bup_as_12_df <- bup_as_12_df_high |>
    mutate(cows = "high") |>
    merge(bup_as_12_df_low |>
    mutate(cows = "low"), all = TRUE)

bup_as_13_df <- bup_as_13_df_high |>
    mutate(cows = "high") |>
    merge(bup_as_13_df_low |>
    mutate(cows = "low"), all = TRUE) 

met_as_12_df <- met_as_12_df_high |>
    mutate(cows = "high")|>
    merge(met_as_12_df_low |>
    mutate(cows = "low"), all = TRUE)

met_as_13_df <- met_as_13_df_high |>
    mutate(cows = "high") |>
    merge(met_as_13_df_low |>
    mutate(cows = "low"), all = TRUE) 

comb_as_12_df <- comb_binomial_as_12_df_high |>
    mutate(cows = "high")|>
    merge(comb_binomial_as_12_df_low |>
    mutate(cows = "low"), all = TRUE) 

comb_as_13_df <- comb_binomial_as_13_df_high |>
    mutate(cows = "high")|>
    merge(comb_binomial_as_13_df_low |>
    mutate(cows = "low"), all = TRUE) 
```

## Final Plot

```{r}
custom_colors <- c("White" = "#e31a1c", "Black" = "#1f78b4", "Hispanic" = "darkseagreen4")

theta_df <- met_result_newcensors_lim |>
    mutate(trt = "Methadone") |>
    filter(is.na(week) == FALSE) |>
    mutate(cows = ifelse(cows == 1, "high", "low")) |>
    mutate(cows = factor(cows, levels = c("low", "high"))) 

diff_df <- met_as_12_df |> 
    mutate(race = "Black v. White") |>
    merge(met_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE) |>
    mutate(trt = "Methadone")  |>
    filter(is.na(week) == FALSE) |>
    mutate(cows = factor(cows, levels = c("low", "high")))


all_theta_plot <- ggplot(theta_df, aes(x = cows, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "COWS Level",
         y = "Dose (mg)") +
    #scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    #facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    ) 

all_diff_plot <- ggplot(diff_df, aes(x = cows, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "COWS Level",
         y = "Difference in Dose (mg)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    #scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    #facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    ) 

final_plot_cont <- all_theta_plot + all_diff_plot + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

theta_df_bup <- bup_result_newcensors_lim |>
    mutate(trt = "Buprenorphine") |>
    filter(is.na(week) == FALSE) |>
    mutate(cows = ifelse(cows == 1, "high", "low")) |>
    mutate(cows = factor(cows, levels = c("low", "high"))) 

diff_df_bup <- bup_as_12_df |> 
    mutate(race = "Black v. White") |>
    merge(bup_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE) |>
    mutate(trt = "Buprenorphine")  |>
    filter(is.na(week) == FALSE) |>
    mutate(cows = factor(cows, levels = c("low", "high")))

all_theta_plot_bup <- ggplot(theta_df_bup, aes(x = cows, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "COWS Level",
         y = "Dose (mg)") +
    #scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    #facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-17.5, 2.5, 2.5, 2.5),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-5, "pt"),
        text = element_text(size=16, family = "Times New Roman")
    )

all_diff_plot_bup <- ggplot(diff_df_bup, aes(x = cows, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "COWS Level",
         y = "Difference in Dose (mg)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    #scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    #facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-17.5, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 16, family = "Times New Roman")
    )

final_plot_cont_bup <- all_theta_plot_bup + all_diff_plot_bup +
    plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

comb_binomial_total_temp <- comb_binomial_lim |>
    mutate(trt = "Pooled") |>
    filter(is.na(week) == FALSE) |>
    mutate(cows = ifelse(cows == 1, "high", "low")) |>
    mutate(cows = factor(cows, levels = c("low", "high"))) 

comb_binomial_pair_temp <- comb_as_12_df |> 
    mutate(race = "Black v. White") |>
    merge(comb_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE) |>
    mutate(trt = "Pooled")  |>
    filter(is.na(week) == FALSE) |>
    mutate(cows = factor(cows, levels = c("low", "high")))

comb_theta_plot <- ggplot(comb_binomial_total_temp, aes(x = cows, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "COWS Level",
         y = "Probability of Receiving a Higher Dose") +
    #scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    #facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

comb_diff_plot <- ggplot(comb_binomial_pair_temp, aes(x = cows, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "COWS Level",
         y = "Difference in Probability of Receiving a Higher Dose") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    #scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    #facet_wrap(~trt, scales = "free") + 
    theme(
        strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

final_plot_comb <- comb_theta_plot + comb_diff_plot + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 24),
          panel.border = element_rect(colour = "black", fill=NA))

final_plot <- (final_plot_cont_bup | final_plot_cont | final_plot_comb) +
    plot_layout(ncol = 3, tag_level = 'new') & 
    theme(plot.tag = element_text(size = 24),
          panel.border = element_rect(colour = "black", fill=NA))

ggsave(filename = here::here("figures/cows_nonimpute_stratify_as.png"),
       plot = final_plot,
       width = 15, height = 20)
```

## Saving results for tables

```{r}
saveRDS(theta_df_bup, here::here("data/table_data/appendix/bup_cont_total_cows_nonimpute.rds"))
saveRDS(diff_df_bup, here::here("data/table_data/appendix/bup_cont_pair_cows_nonimpute.rds"))

saveRDS(theta_df, here::here("data/table_data/appendix/met_cont_total_cows_nonimpute.rds"))
saveRDS(diff_df, here::here("data/table_data/appendix/met_cont_pair_cows_nonimpute.rds"))

saveRDS(comb_binomial_total_temp, here::here("data/table_data/appendix/comb_binomial_total_cows_nonimpute.rds"))
saveRDS(comb_binomial_pair_temp, here::here("data/table_data/appendix/comb_binomial_pair_cows_nonimpute.rds"))
```
