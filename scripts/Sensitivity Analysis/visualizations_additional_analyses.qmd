---
title: "Dosage Descriptive Statistics and Modelling"
format: html
editor: visual
---

```{r, include = FALSE}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ggalluvial)
library(gtsummary)
library(patchwork)
library(lmtp)

knitr::opts_chunk$set(warning=FALSE, message=FALSE)
knitr::opts_chunk$set(fig.width=18, fig.height=12) 

# scripts to make confidence intervals
#source(here::here("scripts/source/utils_adapted.R"))
source(here::here("scripts/source/unadjusted_ci.R"))
```

## Reading/Storing result_newcensors

### Reading result_newcensors for Marginal CI

```{r}
# unadjusted data
data_bup_long <- readRDS(here::here("data/processed/data_bup_long.rds")) |>
    rename("theta" = "avg",
           "lower" = "low",
           "upper" = "high",
           "race" = "xrace")

data_met_long <- readRDS(here::here("data/processed/data_met_long.rds")) |>
    rename("theta" = "avg",
           "lower" = "low",
           "upper" = "high",
           "race" = "xrace")

data_bup_long_ungrouped <- readRDS(here::here("data/processed/data_bup_long_ungrouped.rds"))

data_met_long_ungrouped <- readRDS(here::here("data/processed/data_met_long_ungrouped.rds"))

data_met_bin_unadj <- readRDS(here::here("data/processed/met_binom_df.rds"))

data_bup_bin_unadj <- readRDS(here::here("data/processed/bup_binom_df.rds"))

data_comb_bin_unadj <- readRDS(here::here("data/processed/comb_binom_df.rds"))

met_result_newcensors_all <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_result_newcensors_lim <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_binomial_lim <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_binomial_all <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_all <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_lim <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_binomial_lim <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_binomial_all <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

comb_binomial_lim <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

comb_binomial_all <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

# Loop through the file paths and read the RDS files into data frames
for (j in 1:3)
{
met_result_newcensors_all_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_result_newcensors_lim_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_all_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

bup_result_newcensors_lim_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

for (i in 1:4) {

    if (i > 2)
    {
  data_met <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met", j, sep = "_", i, ".rds")))
  met_result_newcensors_all_temp[[i, "week"]] <- i
  met_result_newcensors_all_temp[[i, "race"]] <- j
  met_result_newcensors_all_temp[[i, "theta"]] <- data_met$theta
  met_result_newcensors_all_temp[[i, "se"]] <- data_met$standard_error
  met_result_newcensors_all_temp[[i, "lower"]] <- data_met$low
  met_result_newcensors_all_temp[[i, "upper"]] <- data_met$high
  
  data_met_lim <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met_limited", j, sep = "_", i, ".rds")))
  met_result_newcensors_lim_temp[[i, "week"]] <- i
  met_result_newcensors_lim_temp[[i, "race"]] <- j
  met_result_newcensors_lim_temp[[i, "theta"]] <- data_met_lim$theta
  met_result_newcensors_lim_temp[[i, "se"]] <- data_met_lim$standard_error
  met_result_newcensors_lim_temp[[i, "lower"]] <- data_met_lim$low
  met_result_newcensors_lim_temp[[i, "upper"]] <- data_met_lim$high
 
  data_bup <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", j, sep = "_", i, ".rds")))
  bup_result_newcensors_all_temp[[i, "week"]] <- i
  bup_result_newcensors_all_temp[[i, "race"]] <- j
  bup_result_newcensors_all_temp[[i, "theta"]] <- data_bup$theta
  bup_result_newcensors_all_temp[[i, "se"]] <- data_bup$standard_error
  bup_result_newcensors_all_temp[[i, "lower"]] <- data_bup$low
  bup_result_newcensors_all_temp[[i, "upper"]] <- data_bup$high
  
  data_bup_lim <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", j, sep = "_", i, ".rds")))
  bup_result_newcensors_lim_temp[[i, "week"]] <- i
  bup_result_newcensors_lim_temp[[i, "race"]] <- j
  bup_result_newcensors_lim_temp[[i, "theta"]] <- data_bup_lim$theta
  bup_result_newcensors_lim_temp[[i, "se"]] <- data_bup_lim$standard_error
  bup_result_newcensors_lim_temp[[i, "lower"]] <- data_bup_lim$low
  bup_result_newcensors_lim_temp[[i, "upper"]] <- data_bup_lim$high
    }
    else
    {
    data_met <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met", j, sep = "_", i, ".rds")))
  met_result_newcensors_all_temp[[i, "week"]] <- i
  met_result_newcensors_all_temp[[i, "race"]] <- j
  met_result_newcensors_all_temp[[i, "theta"]] <- data_met$theta
  met_result_newcensors_all_temp[[i, "se"]] <- data_met$standard_error
  met_result_newcensors_all_temp[[i, "lower"]] <- data_met$low
  met_result_newcensors_all_temp[[i, "upper"]] <- data_met$high
  
  data_met_lim <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met_limited", j, sep = "_", i, ".rds")))
  met_result_newcensors_lim_temp[[i, "week"]] <- i
  met_result_newcensors_lim_temp[[i, "race"]] <- j
  met_result_newcensors_lim_temp[[i, "theta"]] <- data_met_lim$theta
  met_result_newcensors_lim_temp[[i, "se"]] <- data_met_lim$standard_error
  met_result_newcensors_lim_temp[[i, "lower"]] <- data_met_lim$low
  met_result_newcensors_lim_temp[[i, "upper"]] <- data_met_lim$high
 
  data_bup <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", j, sep = "_", i, ".rds")))
  bup_result_newcensors_all_temp[[i, "week"]] <- i
  bup_result_newcensors_all_temp[[i, "race"]] <- j
  bup_result_newcensors_all_temp[[i, "theta"]] <- data_bup$theta
  bup_result_newcensors_all_temp[[i, "se"]] <- data_bup$standard_error
  bup_result_newcensors_all_temp[[i, "lower"]] <- data_bup$low
  bup_result_newcensors_all_temp[[i, "upper"]] <- data_bup$high
  
  data_bup_lim <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", j, sep = "_", i, ".rds")))
  bup_result_newcensors_lim_temp[[i, "week"]] <- i
  bup_result_newcensors_lim_temp[[i, "race"]] <- j
  bup_result_newcensors_lim_temp[[i, "theta"]] <- data_bup_lim$theta
  bup_result_newcensors_lim_temp[[i, "se"]] <- data_bup_lim$standard_error
  bup_result_newcensors_lim_temp[[i, "lower"]] <- data_bup_lim$low
  bup_result_newcensors_lim_temp[[i, "upper"]] <- data_bup_lim$high
    }
}

met_result_newcensors_all <- met_result_newcensors_all |>
    merge(met_result_newcensors_all_temp, all = TRUE)

met_result_newcensors_lim <- met_result_newcensors_lim |>
    merge(met_result_newcensors_lim_temp, all = TRUE) 

bup_result_newcensors_all <- bup_result_newcensors_all |>
    merge(bup_result_newcensors_all_temp, all = TRUE)

bup_result_newcensors_lim <- bup_result_newcensors_lim |>
    merge(bup_result_newcensors_lim_temp, all = TRUE)

}

# binomial analysis
for (j in 1:3)
{
    comb_binomial_lim_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))
    
    comb_binomial_all_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

    
for (i in 3:4) 
{
    data_comb_binomial_lim <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb_limited", j, sep = "_", i, ".rds")))
    comb_binomial_lim_temp[[i, "week"]] <- i
    comb_binomial_lim_temp[[i, "race"]] <- j
    comb_binomial_lim_temp[[i, "theta"]] <- data_comb_binomial_lim$theta
    comb_binomial_lim_temp[[i, "se"]] <- data_comb_binomial_lim$standard_error
    comb_binomial_lim_temp[[i, "lower"]] <- data_comb_binomial_lim$low
    comb_binomial_lim_temp[[i, "upper"]] <- data_comb_binomial_lim$high
    
    data_comb_binomial_all <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb", j, sep = "_", i, ".rds")))
    comb_binomial_all_temp[[i, "week"]] <- i
    comb_binomial_all_temp[[i, "race"]] <- j
    comb_binomial_all_temp[[i, "theta"]] <- data_comb_binomial_all$theta
    comb_binomial_all_temp[[i, "se"]] <- data_comb_binomial_all$standard_error
    comb_binomial_all_temp[[i, "lower"]] <- data_comb_binomial_all$low
    comb_binomial_all_temp[[i, "upper"]] <- data_comb_binomial_all$high
}

comb_binomial_lim <- comb_binomial_lim |>
    merge(comb_binomial_lim_temp, all = TRUE) 

comb_binomial_all <- comb_binomial_all |>
    merge(comb_binomial_all_temp, all = TRUE) 
}

met_result_newcensors_all <- met_result_newcensors_all |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

met_result_newcensors_lim <- met_result_newcensors_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

bup_result_newcensors_all <- bup_result_newcensors_all |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

bup_result_newcensors_lim <- bup_result_newcensors_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

comb_binomial_lim <- comb_binomial_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

comb_binomial_all <- comb_binomial_all |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))
```

### Reading result_newcensors for CI

```{r}
# bup limited 
bup_as_1 <- list()
bup_as_2 <- list()
bup_as_3 <- list()
met_as_1 <- list()
met_as_2 <- list()
met_as_3 <- list()
bup_1 <- list()
bup_2 <- list()
bup_3 <- list()
met_1 <- list()
met_2 <- list()
met_3 <- list()

comb_binomial_as_1 <- list()
comb_binomial_as_2 <- list()
comb_binomial_as_3 <- list()
comb_binomial_1 <- list()
comb_binomial_2 <- list()
comb_binomial_3 <- list()

for (i in 1:4) {
    
    if(i >= 3){
    # continuous
        
    #bup limited
    bup_as_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", "1", sep = "_", i, ".rds")))
    
    bup_as_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", "2", sep = "_", i, ".rds")))
    
    bup_as_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", "3", sep = "_", i, ".rds")))

    #met limited
    met_as_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met_limited", "1", sep = "_", i, ".rds")))
    
    met_as_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met_limited", "2", sep = "_", i, ".rds")))

    met_as_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met_limited", "3", sep = "_", i, ".rds")))
    
    # bup all
    bup_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", "1", sep = "_", i, ".rds")))

    bup_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", "2", sep = "_", i, ".rds")))
    
    bup_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", "3", sep = "_", i, ".rds")))

    # met all
    met_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met", "1", sep = "_", i, ".rds")))
    met_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met", "2", sep = "_", i, ".rds")))
    met_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_newcensor_met", "3", sep = "_", i, ".rds")))
    
    #comb binomial limited
    comb_binomial_as_1[[i-2]] <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb_limited", "1", sep = "_", i, ".rds")))
    
    comb_binomial_as_2[[i-2]] <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb_limited", "2", sep = "_", i, ".rds")))
    
    comb_binomial_as_3[[i-2]] <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb_limited", "3", sep = "_", i, ".rds")))
    
    # comb binomial all
    comb_binomial_1[[i-2]] <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb", "1", sep = "_", i, ".rds")))
    comb_binomial_2[[i-2]] <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb", "2", sep = "_", i, ".rds")))
    comb_binomial_3[[i-2]] <- readRDS(here::here(paste0("./data/trial_indicator/comb_binomial/","result_newcensor_comb", "3", sep = "_", i, ".rds")))
    } else
    {
            #bup limited
    bup_as_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", "1", sep = "_", i, ".rds")))
    
    bup_as_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", "2", sep = "_", i, ".rds")))
    
    bup_as_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor_limited", "3", sep = "_", i, ".rds")))

    #met limited
    met_as_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met_limited", "1", sep = "_", i, ".rds")))
    
    met_as_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met_limited", "2", sep = "_", i, ".rds")))

    met_as_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met_limited", "3", sep = "_", i, ".rds")))
    
    # bup all
    bup_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", "1", sep = "_", i, ".rds")))

    bup_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", "2", sep = "_", i, ".rds")))
    
    bup_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/bup/","result_newcensor", "3", sep = "_", i, ".rds")))

    # met all
    met_1[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met", "1", sep = "_", i, ".rds")))
    met_2[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met", "2", sep = "_", i, ".rds")))
    met_3[[i]] <- readRDS(here::here(paste0("./data/trial_indicator/met/","result_met", "3", sep = "_", i, ".rds")))
    }
}

lmtp_contrast_simple <- function(X, Y) {
  res <- lmtp_contrast(X, ref = Y)
  
  return(res)
}

bup_all_12_contrast <- mapply(lmtp_contrast_simple, X = bup_2, Y = bup_1)

bup_all_12_df <- as.data.frame(bup_all_12_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(bup_all_12_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(bup_all_12_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(bup_all_12_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

bup_all_13_contrast <- mapply(lmtp_contrast_simple, X = bup_3, Y = bup_1)

bup_all_13_df <- as.data.frame(bup_all_13_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(bup_all_13_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(bup_all_13_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(bup_all_13_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

met_all_12_contrast <- mapply(lmtp_contrast_simple, X = met_2, Y = met_1)

met_all_12_df <- as.data.frame(met_all_12_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(met_all_12_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(met_all_12_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(met_all_12_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

met_all_13_contrast <- mapply(lmtp_contrast_simple, X = met_3, Y = met_1)

met_all_13_df <- as.data.frame(met_all_13_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(met_all_13_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(met_all_13_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(met_all_13_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

bup_as_12_contrast <- mapply(lmtp_contrast_simple, X = bup_as_2, Y = bup_as_1)

bup_as_12_df <- as.data.frame(bup_as_12_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(bup_as_12_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(bup_as_12_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(bup_as_12_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

bup_as_13_contrast <- mapply(lmtp_contrast_simple, X = bup_as_3, Y = bup_as_1)

bup_as_13_df <- as.data.frame(bup_as_13_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(bup_as_13_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(bup_as_13_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(bup_as_13_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

met_as_12_contrast <- mapply(lmtp_contrast_simple, X = met_as_2, Y = met_as_1)

met_as_12_df <- as.data.frame(met_as_12_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(met_as_12_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(met_as_12_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(met_as_12_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

met_as_13_contrast <- mapply(lmtp_contrast_simple, X = met_as_3, Y = met_as_1)

met_as_13_df <- as.data.frame(met_as_13_contrast[,1]$val) |>
    mutate(time = 1) |>
    merge(as.data.frame(met_as_13_contrast[,2]$val) |>
    mutate(time = 2), all = TRUE) |>
    merge(as.data.frame(met_as_13_contrast[,3]$val) |>
    mutate(time = 3), all = TRUE) |>
    merge(as.data.frame(met_as_13_contrast[,4]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

comb_binomial_as_12_contrast <- mapply(lmtp_contrast_simple, X = comb_binomial_as_2, Y = comb_binomial_as_1)

comb_binomial_as_12_df <- as.data.frame(comb_binomial_as_12_contrast[,1]$val) |>
    mutate(time = 3) |>
    merge(as.data.frame(comb_binomial_as_12_contrast[,2]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

comb_binomial_as_13_contrast <- mapply(lmtp_contrast_simple, X = comb_binomial_as_3, Y = comb_binomial_as_1)

comb_binomial_as_13_df <- as.data.frame(comb_binomial_as_13_contrast[,1]$val) |>
    mutate(time = 3) |>
    merge(as.data.frame(comb_binomial_as_13_contrast[,2]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

comb_binomial_12_contrast <- mapply(lmtp_contrast_simple, X = comb_binomial_2, Y = comb_binomial_1)

comb_binomial_12_df <- as.data.frame(comb_binomial_12_contrast[,1]$val) |>
    mutate(time = 3) |>
    merge(as.data.frame(comb_binomial_12_contrast[,2]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

comb_binomial_13_contrast <- mapply(lmtp_contrast_simple, X = comb_binomial_3, Y = comb_binomial_1)

comb_binomial_13_df <- as.data.frame(comb_binomial_13_contrast[,1]$val) |>
    mutate(time = 3) |>
    merge(as.data.frame(comb_binomial_13_contrast[,2]$val) |>
    mutate(time = 4), all = TRUE) |>
    arrange(time)

data_bup_long_1 <- data_bup_long |>
    filter(race == "White") |>
    rename("avg" = "theta")

data_bup_long_2 <- data_bup_long |>
    filter(race == "Black") |>
    rename("avg" = "theta")

data_bup_long_3 <- data_bup_long |>
    filter(race == "Hispanic") |>
    rename("avg" = "theta")

data_met_long_1 <- data_met_long |>
    filter(race == "White") |>
    rename("avg" = "theta")

data_met_long_2 <- data_met_long |>
    filter(race == "Black") |>
    rename("avg" = "theta")

data_met_long_3 <- data_met_long |>
    filter(race == "Hispanic") |>
    rename("avg" = "theta")

data_comb_bin_unadj_1 <- data_comb_bin_unadj |>
    filter(xrace == "White")

data_comb_bin_unadj_2  <- data_comb_bin_unadj |>
    filter(xrace == "Black")

data_comb_bin_unadj_3 <- data_comb_bin_unadj |>
    filter(xrace == "Hispanic")

unadjust_bup_12 <- unadjusted_diff(data_bup_long_2, data_bup_long_1, ci_type = "marginal")

unadjust_bup_13 <- unadjusted_diff(data_bup_long_3, data_bup_long_1, ci_type = "marginal")

unadjust_bup_23 <- unadjusted_diff(data_bup_long_2, data_bup_long_3, ci_type = "marginal")

unadjust_met_12 <- unadjusted_diff(data_met_long_2, data_met_long_1, ci_type = "marginal")

unadjust_met_13 <- unadjusted_diff(data_met_long_3, data_met_long_1, ci_type = "marginal")

unadjust_met_23 <- unadjusted_diff(data_met_long_2, data_met_long_3, ci_type = "marginal")

unadjust_comb_12_bin <- unadjusted_diff_binom(data_comb_bin_unadj_2, data_comb_bin_unadj_1, ci_type = "marginal")

unadjust_comb_13_bin <- unadjusted_diff_binom(data_comb_bin_unadj_3, data_comb_bin_unadj_1, ci_type = "marginal")

unadjust_comb_23_bin <- unadjusted_diff_binom(data_comb_bin_unadj_2, data_comb_bin_unadj_3, ci_type = "marginal")
```

## Plotting Continuous

```{r}
custom_colors <- c("White" = "#e31a1c", "Black" = "#1f78b4", "Hispanic" = "darkseagreen4")

met_cont_unadj <- data_met_long |>
    mutate(type = "Crude")

met_cont_lim <- met_result_newcensors_lim |>
    mutate(type = "Adjusted by age & sex")

met_cont_all <- met_result_newcensors_all |>
    mutate(type = "Adjusted by expanded set")

met_cont_total <- met_cont_unadj |>
    merge(met_cont_lim, all = TRUE) |>
    merge(met_cont_all, all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set")))

met_cont_plot <- ggplot(met_cont_total, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Mean Dose") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.0000000001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-5, "pt"),
        text = element_text(size=10, family = "Times New Roman")
    )

met_unadj <- unadjust_met_12 |> mutate(race = "Black v. White") |>
    merge(unadjust_met_13 |> mutate(race = "Hispanic v. White"), all = TRUE)

met_as <- met_as_12_df |> mutate(race = "Black v. White") |>
    merge(met_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

met_all <- met_all_12_df |> mutate(race = "Black v. White") |>
    merge(met_all_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

met_cont_pair <- met_unadj |> mutate(type = "Crude") |>
    merge(met_as |> mutate(type = "Adjusted by age & sex"), all = TRUE) |>
    merge(met_all |> mutate(type = "Adjusted by expanded set"), all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set")))

met_pairwise <- ggplot(met_cont_pair, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Mean Dose (Difference)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.0000000001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 10, family = "Times New Roman")
    )

met_cont_plot_newcensor <- met_cont_plot + met_pairwise + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 12),
          panel.border = element_rect(colour = "black", fill=NA, size = 1))

#ggsave(filename = here::here("figures/met_cont_plot_newcensor.png"),
#       plot = met_cont_plot_newcensor,
#       width = 8, height = 11)

bup_cont_unadj <- data_bup_long |>
    mutate(type = "Crude")

bup_cont_lim <- bup_result_newcensors_lim |>
    mutate(type = "Adjusted by age & sex")

bup_cont_all <- bup_result_newcensors_all |>
    mutate(type = "Adjusted by expanded set")

bup_cont_total <- bup_cont_unadj |>
    merge(bup_cont_lim, all = TRUE) |>
    merge(bup_cont_all, all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set")))

bup_cont_plot <- ggplot(bup_cont_total, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Mean Dose") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.0000000001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 10, family = "Times New Roman")
    )

bup_unadj <- unadjust_bup_12 |> mutate(race = "Black v. White") |>
    merge(unadjust_bup_13 |> mutate(race = "Hispanic v. White"), all = TRUE)

bup_as <- bup_as_12_df |> mutate(race = "Black v. White") |>
    merge(bup_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

bup_all <- bup_all_12_df |> mutate(race = "Black v. White") |>
    merge(bup_all_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

bup_cont_pair <- bup_unadj |> mutate(type = "Crude") |>
    merge(bup_as |> mutate(type = "Adjusted by age & sex"), all = TRUE) |>
    merge(bup_all |> mutate(type = "Adjusted by expanded set"), all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set")))

bup_pairwise <- ggplot(bup_cont_pair, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Mean Dose (Difference)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.0000000001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 10, family = "Times New Roman")
    )

bup_cont_plot_newcensor <- bup_cont_plot + bup_pairwise + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 12),
          panel.border = element_rect(colour = "black", fill=NA))

#ggsave(filename = here::here("figures/bup_cont_plot_newcensor.png"),
#       plot = bup_cont_plot_newcensor,
#       width = 8, height = 11)
```

## Binomial Plots

```{r}
comb_binomial_unadj <- readRDS(here::here("data/processed/comb_binom_df.rds")) |>
    mutate(type = "Crude") |>
    rename("race" = "xrace",
           "theta" = "prop")

comb_binomial_lim <- comb_binomial_lim |>
    slice(1:6) |>
    mutate(type = "Adjusted by age & sex")

comb_binomial_all <- comb_binomial_all |>
    slice(1:6) |>
    mutate(type = "Adjusted by expanded set")

comb_binomial_total <- comb_binomial_unadj |>
    merge(comb_binomial_lim, all = TRUE) |>
    merge(comb_binomial_all, all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set")))

comb_binomial_plot <- ggplot(comb_binomial_total, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Probability of Receiving Higher Dose") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-5, "pt"),
        text = element_text(size=10, family = "Times New Roman")
    )

bup_binomial_unadj_pair <- unadjust_comb_12_bin |> mutate(race = "Black v. White") |>
    merge(unadjust_comb_13_bin |> mutate(race = "Hispanic v. White"), all = TRUE)

comb_binomial_as <- comb_binomial_as_12_df |> mutate(race = "Black v. White") |>
    merge(comb_binomial_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

comb_binomial_all_pair <- comb_binomial_12_df |> mutate(race = "Black v. White") |>
    merge(comb_binomial_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

comb_binomial_pair <- bup_binomial_unadj_pair |> mutate(type = "Crude") |>
    merge(comb_binomial_as |> mutate(type = "Adjusted by age & sex"), all = TRUE) |>
    merge(comb_binomial_all_pair |> mutate(type = "Adjusted by expanded set"), all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set")),
           time = case_when(time == 1 ~ 3,
                            time == 2 ~ 4,
                            TRUE ~ time)) 

comb_binomial_pairwise <- ggplot(comb_binomial_pair, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Probability of Receiving Higher Dose (Difference)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 10, family = "Times New Roman")
    )

comb_binomial_plot_newcensor <- comb_binomial_plot + comb_binomial_pairwise + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 12),
          panel.border = element_rect(colour = "black", fill=NA))

#ggsave(filename = here::here("figures/comb_binomial_plot_newcensor.png"),
#       plot = comb_binomial_plot_newcensor,
#       width = 8, height = 11)
```

## Final Plot

```{r}
theta_df <- met_cont_total |>
    filter(type == "Adjusted by age & sex") |>
    mutate(trt = "Methadone") 


diff_df <- met_cont_pair |>
    filter(type == "Adjusted by age & sex") |>
    mutate(trt = "Methadone") 

all_theta_plot <- ggplot(theta_df, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Dose (mg)") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    ) 

all_diff_plot <- ggplot(diff_df, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Difference in Dose (mg)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    ) 

final_plot_cont <- all_theta_plot + all_diff_plot + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

theta_df_bup <- bup_cont_total |>
    filter(type == "Adjusted by age & sex") |>
    mutate(trt = "Buprenorphine")


diff_df_bup <- bup_cont_pair |>
    filter(type == "Adjusted by age & sex") |>
    mutate(trt = "Buprenorphine")

all_theta_plot_bup <- ggplot(theta_df_bup, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Dose (mg)") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-17.5, 2.5, 2.5, 2.5),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-5, "pt"),
        text = element_text(size=16, family = "Times New Roman")
    )

all_diff_plot_bup <- ggplot(diff_df_bup, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Difference in Dose (mg)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-17.5, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 16, family = "Times New Roman")
    )

final_plot_cont_bup <- all_theta_plot_bup + all_diff_plot_bup +
    plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

comb_binomial_total_temp <- comb_binomial_total |>
    filter(type == "Adjusted by age & sex") |>
    mutate(trt = "Pooled")

comb_binomial_pair_temp <- comb_binomial_pair |>
    filter(type == "Adjusted by age & sex") |>
    mutate(trt = "Pooled")

comb_theta_plot <- ggplot(comb_binomial_total_temp, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Probability of Receiving a Higher Dose") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

comb_diff_plot <- ggplot(comb_binomial_pair_temp, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Difference in Probability of Receiving a Higher Dose") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(
        strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

final_plot_comb <- comb_theta_plot + comb_diff_plot + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 24),
          panel.border = element_rect(colour = "black", fill=NA))

final_plot <- (final_plot_cont_bup | final_plot_cont | final_plot_comb) +
    plot_layout(ncol = 3, tag_level = 'new') & 
    theme(plot.tag = element_text(size = 24),
          panel.border = element_rect(colour = "black", fill=NA))

#ggsave(filename = here::here("figures/trial_indicator_as.png"),
#       plot = final_plot,
#       width = 15, height = 20)
```

## Appendix Plot

```{r}
theta_df <- met_cont_total |>
    filter(type == "Adjusted by expanded set") |>
    mutate(trt = "Methadone") 


diff_df <- met_cont_pair |>
    filter(type == "Adjusted by expanded set") |>
    mutate(trt = "Methadone") 

all_theta_plot <- ggplot(theta_df, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Dose (mg)") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

all_diff_plot <- ggplot(diff_df, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Difference in Dose (mg)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    ) 

appendix_plot_cont <- all_theta_plot + all_diff_plot + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

theta_df_bup <- bup_cont_total |>
    filter(type == "Adjusted by expanded set") |>
    mutate(trt = "Buprenorphine")


diff_df_bup <- bup_cont_pair |>
    filter(type == "Adjusted by expanded set") |>
    mutate(trt = "Buprenorphine")

all_theta_plot_bup <- ggplot(theta_df_bup, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Dose (mg)") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-17.5, 2.5, 2.5, 2.5),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-5, "pt"),
        text = element_text(size=16, family = "Times New Roman")
    )

all_diff_plot_bup <- ggplot(diff_df_bup, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Difference in Dose (mg)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-17.5, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 16, family = "Times New Roman")
    )

appendix_plot_cont_bup <- all_theta_plot_bup + all_diff_plot_bup +
    plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

comb_binomial_total_temp <- comb_binomial_total |>
    filter(type == "Adjusted by expanded set") |>
    mutate(trt = "Pooled")

comb_binomial_pair_temp <- comb_binomial_pair |>
    filter(type == "Adjusted by expanded set") |>
    mutate(trt = "Pooled")

comb_theta_plot <- ggplot(comb_binomial_total_temp, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Probability of Receiving a Higher Dose") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

comb_diff_plot <- ggplot(comb_binomial_pair_temp, aes(x = time, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Difference in Probability of Receiving a Higher Dose") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~trt, scales = "free") + 
    theme(strip.text = element_text(size = 24),
        legend.position = "none",
        plot.title = element_text(vjust = 0.5),
        text = element_text(size = 16, family = "Times New Roman")
    )

appendix_plot_comb <- comb_theta_plot + comb_diff_plot + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 14),
          panel.border = element_rect(colour = "black", fill=NA))

appendix_plot <- (appendix_plot_cont_bup | appendix_plot_cont | appendix_plot_comb) +
    plot_layout(ncol = 3, tag_level = 'new') & 
    theme(plot.tag = element_text(size = 18),
          panel.border = element_rect(colour = "black", fill=NA))

#ggsave(filename = here::here("figures/trial_indicator_all_covars.png"),
#       plot = appendix_plot,
#       width = 15, height = 20)
```

```{r}
saveRDS(bup_cont_total, here::here("data/table_data/appendix/bup_cont_total_trial_indicator.rds"))
saveRDS(bup_cont_pair, here::here("data/table_data/appendix/bup_cont_pair_trial_indicator.rds"))
```
