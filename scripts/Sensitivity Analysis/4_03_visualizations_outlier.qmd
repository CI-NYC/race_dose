---
title: "Dosage Descriptive Statistics and Modelling"
format: html
editor: visual
---

```{r, include = FALSE}
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(ggalluvial)
library(gtsummary)
library(patchwork)

knitr::opts_chunk$set(warning=FALSE, message=FALSE)
knitr::opts_chunk$set(fig.width=18, fig.height=12) 

# scripts to make confidence intervals
source(here::here("scripts/source/utils_adapted.R"))
source(here::here("scripts/source/unadjusted_ci.R"))
```

## Reading/Storing result_newcensors

### Reading result_newcensors for Marginal CI

```{r}
data_met_long <- readRDS(here::here("data/processed/data_met_long.rds")) |>
    rename("theta" = "avg",
           "lower" = "low",
           "upper" = "high",
           "race" = "xrace")
data_met_long_ungrouped <- readRDS(here::here("data/processed/data_met_long_ungrouped.rds"))

met_result_newcensors_all <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_result_newcensors_lim <- data.frame(week = integer(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))


# Loop through the file paths and read the RDS files into data frames
for (j in 1:3)
{
met_result_newcensors_all_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

met_result_newcensors_lim_temp <- data.frame(week = numeric(0), race = numeric(0), theta = numeric(0), se = numeric(0), lower = numeric(0), upper = numeric(0))

for (i in 1:4) {

    if (i > 2)
    {
  data_met <- readRDS(here::here(paste0("./data/sensitivity/","result_met", j, sep = "_", i, ".rds")))
  met_result_newcensors_all_temp[[i, "week"]] <- i
  met_result_newcensors_all_temp[[i, "race"]] <- j
  met_result_newcensors_all_temp[[i, "theta"]] <- data_met$theta
  met_result_newcensors_all_temp[[i, "se"]] <- data_met$standard_error
  met_result_newcensors_all_temp[[i, "lower"]] <- data_met$low
  met_result_newcensors_all_temp[[i, "upper"]] <- data_met$high
  
  data_met_lim <- readRDS(here::here(paste0("./data/sensitivity/","result_met_limited", j, sep = "_", i, ".rds")))
  met_result_newcensors_lim_temp[[i, "week"]] <- i
  met_result_newcensors_lim_temp[[i, "race"]] <- j
  met_result_newcensors_lim_temp[[i, "theta"]] <- data_met_lim$theta
  met_result_newcensors_lim_temp[[i, "se"]] <- data_met_lim$standard_error
  met_result_newcensors_lim_temp[[i, "lower"]] <- data_met_lim$low
  met_result_newcensors_lim_temp[[i, "upper"]] <- data_met_lim$high
    }
    else
    {
    data_met <- readRDS(here::here(paste0("./data/20824/met/","result_met", j, sep = "_", i, ".rds")))
  met_result_newcensors_all_temp[[i, "week"]] <- i
  met_result_newcensors_all_temp[[i, "race"]] <- j
  met_result_newcensors_all_temp[[i, "theta"]] <- data_met$theta
  met_result_newcensors_all_temp[[i, "se"]] <- data_met$standard_error
  met_result_newcensors_all_temp[[i, "lower"]] <- data_met$low
  met_result_newcensors_all_temp[[i, "upper"]] <- data_met$high
  
  data_met_lim <- readRDS(here::here(paste0("./data/20824/met/","result_met_limited", j, sep = "_", i, ".rds")))
  met_result_newcensors_lim_temp[[i, "week"]] <- i
  met_result_newcensors_lim_temp[[i, "race"]] <- j
  met_result_newcensors_lim_temp[[i, "theta"]] <- data_met_lim$theta
  met_result_newcensors_lim_temp[[i, "se"]] <- data_met_lim$standard_error
  met_result_newcensors_lim_temp[[i, "lower"]] <- data_met_lim$low
  met_result_newcensors_lim_temp[[i, "upper"]] <- data_met_lim$high
    }
}

met_result_newcensors_all <- met_result_newcensors_all |>
    merge(met_result_newcensors_all_temp, all = TRUE)

met_result_newcensors_lim <- met_result_newcensors_lim |>
    merge(met_result_newcensors_lim_temp, all = TRUE) 

}

met_result_newcensors_all <- met_result_newcensors_all |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))

met_result_newcensors_lim <- met_result_newcensors_lim |>
    mutate(race = as.factor(race)) |>
    mutate(race = case_when(race == "1" ~ "White",
                             race == "2" ~ "Black",
                             race == "3" ~ "Hispanic"))
```

### Reading result_newcensors for CI

```{r}
# bup limited 
bup_as_1 <- list()
bup_as_2 <- list()
bup_as_3 <- list()
met_as_1 <- list()
met_as_2 <- list()
met_as_3 <- list()
bup_1 <- list()
bup_2 <- list()
bup_3 <- list()
met_1 <- list()
met_2 <- list()
met_3 <- list()

for (i in 1:4) {
    
    if(i >= 3){
    # continuous

    #met limited
    met_as_1[[i]] <- readRDS(here::here(paste0("./data/sensitivity/","result_met_limited", "1", sep = "_", i, ".rds")))
    
    met_as_2[[i]] <- readRDS(here::here(paste0("./data/sensitivity/","result_met", "2", sep = "_", i, ".rds")))

    met_as_3[[i]] <- readRDS(here::here(paste0("./data/sensitivity/","result_met_limited", "3", sep = "_", i, ".rds")))
    
    # met all
    met_1[[i]] <- readRDS(here::here(paste0("./data/sensitivity/","result_met", "1", sep = "_", i, ".rds")))
    met_2[[i]] <- readRDS(here::here(paste0("./data/sensitivity/","result_met", "2", sep = "_", i, ".rds")))
    met_3[[i]] <- readRDS(here::here(paste0("./data/sensitivity/","result_met", "3", sep = "_", i, ".rds")))
    } else
    {

    #met limited
    met_as_1[[i]] <- readRDS(here::here(paste0("./data/20824/met/","result_met_limited", "1", sep = "_", i, ".rds")))
    
    met_as_2[[i]] <- readRDS(here::here(paste0("./data/20824/met/","result_met_limited", "2", sep = "_", i, ".rds")))

    met_as_3[[i]] <- readRDS(here::here(paste0("./data/20824/met/","result_met_limited", "3", sep = "_", i, ".rds")))


    # met all
    met_1[[i]] <- readRDS(here::here(paste0("./data/20824/met/","result_met", "1", sep = "_", i, ".rds")))
    met_2[[i]] <- readRDS(here::here(paste0("./data/20824/met/","result_met", "2", sep = "_", i, ".rds")))
    met_3[[i]] <- readRDS(here::here(paste0("./data/20824/met/","result_met", "3", sep = "_", i, ".rds")))
    }
}

met_all_12_df <- summarize_results(met_2, met_1, ci_level = 0.95, ci_type = "marginal")$diff_est |>
    filter(time > 0)
met_all_23_df <- summarize_results(met_2, met_3, ci_level = 0.95, ci_type = "marginal")$diff_est |>
    filter(time > 0)
met_all_13_df <- summarize_results(met_3, met_1, ci_level = 0.95, ci_type = "marginal")$diff_est |>
    filter(time > 0)

met_as_12_df <- summarize_results(met_as_2, met_as_1, ci_level = 0.95, ci_type = "marginal")$diff_est |>
    filter(time > 0)
met_as_23_df <- summarize_results(met_as_2, met_as_3, ci_level = 0.95, ci_type = "marginal")$diff_est |>
    filter(time > 0)
met_as_13_df <- summarize_results(met_as_3, met_as_1, ci_level = 0.95, ci_type = "marginal")$diff_est |>
    filter(time > 0)

data_met_long_1 <- data_met_long |>
    filter(race == "White") |>
    rename("avg" = "theta")

data_met_long_2 <- data_met_long |>
    filter(race == "Black") |>
    rename("avg" = "theta")

data_met_long_3 <- data_met_long |>
    filter(race == "Hispanic") |>
    rename("avg" = "theta")

unadjust_met_12 <- unadjusted_diff(data_met_long_2, data_met_long_1, ci_type = "marginal")

unadjust_met_13 <- unadjusted_diff(data_met_long_3, data_met_long_1, ci_type = "marginal")

unadjust_met_23 <- unadjusted_diff(data_met_long_2, data_met_long_3, ci_type = "marginal")
```

## Plotting Continuous

```{r}
custom_colors <- c("White" = "#e31a1c", "Black" = "#1f78b4", "Hispanic" = "darkseagreen4")

met_cont_unadj <- data_met_long |>
    mutate(type = "Crude")

met_cont_lim <- met_result_newcensors_lim |>
    mutate(type = "Adjusted by age & sex")

met_cont_all <- met_result_newcensors_all |>
    mutate(type = "Adjusted by expanded set")

met_cont_total <- met_cont_unadj |>
    merge(met_cont_lim, all = TRUE) |>
    merge(met_cont_all, all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set"))) |>
    filter(week >= 3)

met_cont_plot <- ggplot(met_cont_total, aes(x = week, y = theta, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Mean Dose") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = custom_colors) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = custom_colors) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.0000000001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-5, "pt"),
        text = element_text(size=10, family = "Times New Roman")
    )

met_unadj <- unadjust_met_12 |> mutate(race = "Black v. White") |>
    merge(unadjust_met_23 |> mutate(race = "Black v. Hispanic"), all = TRUE) |>
    merge(unadjust_met_13 |> mutate(race = "Hispanic v. White"), all = TRUE)

met_as <- met_as_12_df |> mutate(race = "Black v. White") |>
    merge(met_as_23_df |> mutate(race = "Black v. Hispanic"), all = TRUE) |>
    merge(met_as_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

met_all <- met_all_12_df |> mutate(race = "Black v. White") |>
    merge(met_all_23_df |> mutate(race = "Black v. Hispanic"), all = TRUE) |>
    merge(met_all_13_df |> mutate(race = "Hispanic v. White"), all = TRUE)

met_cont_pair <- met_unadj |> mutate(type = "Crude") |>
    merge(met_as |> mutate(type = "Adjusted by age & sex"), all = TRUE) |>
    merge(met_all |> mutate(type = "Adjusted by expanded set"), all = TRUE) |>
    mutate(type = factor(type, levels = c("Crude", "Adjusted by age & sex", "Adjusted by expanded set"))) |>
    filter(race != "Black v. Hispanic",
           time >= 3) 

met_pairwise <- ggplot(met_cont_pair, aes(x = time, y = effect_est, group = race, color = race, fill = race, shape = race)) +
    geom_point(position = position_dodge(width = 0.5)) +
    geom_errorbar(aes(ymin = ci_lwr, ymax = ci_upr), width = 0.25, position = position_dodge(width = 0.5)) +
    labs(title = "",
         x = "Study Week",
         y = "Mean Dose (Difference)") +
    geom_hline(yintercept = 0, linetype = "dotted", color = "black") +
    scale_x_continuous(breaks = seq(1, 4, by = 1)) +
    scale_color_manual(values = c("#1f78b4", "darkseagreen4")) + 
    scale_shape_manual(values = c(1, 0, 8)) +
    scale_fill_manual(values = c("#1f78b4", "darkseagreen4")) +  
    theme_minimal() +
    labs(color = "",
         shape = "",
         fill = "") +
    facet_wrap(~type, scales = "free_x") + 
    theme(
        legend.position = c(0.00125, 0.9975),
        legend.justification = c("left", "top"),
        legend.box.just = "left",
        legend.margin = margin(-12, 2.5, 2.5, 2.5),
        legend.title = element_text(margin = margin(0, 0, 0, 0)),
        legend.key = element_rect(fill = "white", colour = "black", size = 0.0000000001),
        legend.background = element_rect(fill="white", size = 0.5),
        legend.box.background = element_rect(color = "black", size = 0.25),
        legend.box = "vertical", 
        plot.title = element_text(vjust = 0.5),
        legend.key.size = unit(0.000000000000001, 'cm'), 
        legend.box.spacing = unit(-10, "pt"),
        text = element_text(size = 10, family = "Times New Roman")
    )

met_cont_plot_newcensor <- met_cont_plot + met_pairwise + 
    plot_annotation(tag_levels = 'A') + plot_layout(ncol = 1) & 
    theme(plot.tag = element_text(size = 12),
          panel.border = element_rect(colour = "black", fill=NA, size = 1))

ggsave(filename = here::here("figures/met_cont_plot_sens.png"),
       plot = met_cont_plot_newcensor,
       width = 8, height = 11)
```
