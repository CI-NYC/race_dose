---
title: "Dosage Descriptive Statistics and Modelling"
format: html
editor: visual
---

```{r, include = FALSE}
library(tidyverse)
```

## Reading Data

```{r}
data_bup <- readRDS(here::here("data/processed/data_bup.rds"))
data_met <- readRDS(here::here("data/processed/data_met.rds"))
```

## Descriptive Stats Stratified by Race and Week

### bup dose in long format for summary statistics

```{r}
data_bup_long <- data_bup |>
    pivot_longer(
    cols = starts_with("wk"),
    names_to = c("week", "type_name"),
    names_pattern = "(wk[0-9]+).?(.*)",
    values_to = "count") |>
    pivot_wider(id_cols = c("who", "xrace", "week", "site"),
                names_from = "type_name",
                values_from = "count") |>
    mutate(dose_this_week = case_when(
        censor == 0 ~ as.numeric(NA),
        TRUE ~ dose_this_week),
        week = as.integer(gsub("^.{0,2}", "", week))) 

data_bup_long_grouped <- data_bup_long |>
        group_by(week, xrace) |>
        summarize(avg = mean(dose_this_week, na.rm = TRUE),
                  sd = sd(dose_this_week, na.rm = TRUE),
                  se = plotrix::std.error(dose_this_week, na.rm = TRUE),
                  low = avg - 1.96*se,
                  high = avg + 1.96*se,
                  count = n(),
                  uncensored = sum(censor), #summing uncensored individuals
                  censored = n() - sum(censor), #summing censored individuals
                  max = max(dose_this_week, na.rm = TRUE),
                  min = min(dose_this_week, na.rm = TRUE),
                  range_bup = max - min) |>
    mutate(xrace = case_when(xrace == "1" ~ "White",
                             xrace == "2" ~ "Black",
                             xrace == "3" ~ "Hispanic")) |>
    filter(week <= 4)
```

### met dose in long format for summary statistics

```{r}
data_met_long <- data_met |>
    pivot_longer(
    cols = starts_with("wk"),
    names_to = c("week", "type_name"),
    names_pattern = "(wk[0-9]+).?(.*)",
    values_to = "count") |>
    pivot_wider(id_cols = c("who", "xrace", "week", "site"),
                names_from = "type_name",
                values_from = "count") |>
    mutate(dose_this_week = case_when(
        censor == 0 ~ as.numeric(NA),
        TRUE ~ dose_this_week),
        week = as.integer(gsub("^.{0,2}", "", week))) 

data_met_long_grouped <- data_met_long |>
    group_by(week, xrace) |>
        summarize(avg = mean(dose_this_week, na.rm = TRUE),
                  sd = sd(dose_this_week, na.rm = TRUE),
                  se = plotrix::std.error(dose_this_week, na.rm = TRUE),
                  low = avg - 1.96*se,
                  high = avg + 1.96*se,
                  count = n(),
                  uncensored = sum(censor), #summing uncensored individuals
                  censored = n() - sum(censor), #summing censored individuals
                  max = max(dose_this_week, na.rm = TRUE),
                  min = min(dose_this_week, na.rm = TRUE),
                  range_bup = max - min) |>
    mutate(xrace = case_when(xrace == "1" ~ "White",
                             xrace == "2" ~ "Black",
                             xrace == "3" ~ "Hispanic")) |>
    filter(week <= 4)
```

## Sites

```{r}
## Site

bup_sites <- data_bup_long |>
    filter(week <= 4 & censor == 1) |> #filtering out censoring
    group_by(site, week, xrace) |>
    summarize(count = n(), mean_dose = mean(dose_this_week)) |>
    mutate(freq = count/sum(count))

met_sites <- data_met_long |>
    filter(week <= 4 & censor == 1) |> #filtering out censoring
    group_by(site, week, xrace) |>
    summarize(count = n(), mean_dose = mean(dose_this_week)) |>
    mutate(freq = count/sum(count))
```

## Saving Results

```{r}
#saveRDS(data_bup_long, here::here("data/processed/data_bup_long_ungrouped.rds"))
#saveRDS(data_met_long, here::here("data/processed/data_met_long_ungrouped.rds"))
#saveRDS(data_bup_long_grouped, here::here("data/processed/data_bup_long.rds"))
#saveRDS(data_met_long_grouped, here::here("data/processed/data_met_long.rds"))
#saveRDS(bup_sites, here::here("data/processed/bup_sites.rds"))
#saveRDS(met_sites, here::here("data/processed/met_sites.rds"))
```
